{"version":3,"sources":["ocLazyLoad.js"],"names":["getRequires","module","requires","angular","forEachArray","requireModule","regModules","indexOf","push","moduleExists","moduleName","e","test","message","getModule","invokeQueue","providers","queue","reconfig","i","len","args","provider","length","isArray","hasOwnProperty","Error","isNew","registerInvokeList","isDefined","apply","callInvoke","fct","invoked","regConfigs","isFunction","j","jlen","register","registerModules","params","k","moduleFn","tempRunBlocks","getModuleName","justLoaded","newModule","_runBlocks","runBlocks","shift","rerun","concat","_invokeQueue","_configBlocks","broadcast","pop","instanceInjector","getInstanceInjector","fn","invoke","invokeList","type","newInvoke","isUndefined","regInvokes","onInvoke","invokeName","isString","isObject","forEach","name","init","initModules","addReg","mainModule","ocLazyLoad","noop","$controllerProvider","$provide","$compileProvider","$filterProvider","$injector","$animateProvider","jsLoader","cssLoader","templatesLoader","modules","anchor","document","getElementsByTagName","debug","events","element","window","this","$get","$log","$q","$templateCache","$http","$rootElement","$rootScope","$cacheFactory","$interval","filesCache","uaCssChecked","useCssLoadPatch","data","injector","eventName","$broadcast","info","buildElement","path","el","loaded","deferred","defer","cacheBuster","url","dc","Date","getTime","substring","get","put","promise","createElement","rel","href","cache","src","reject","onload","resolve","onerror","async","serie","insertBeforeElem","lastChild","insertBefore","ua","navigator","userAgent","toLowerCase","platform","v","match","iOSVersion","parseFloat","parseInt","join","androidVersion","slice","safariVersion","tries","interval","sheet","cssRules","cancel","paths","callback","promises","all","then","err","ocLazyLoadLoader","success","node","nodeName","id","innerHTML","error","filesLoader","config","cssFiles","templatesFiles","jsFiles","cachePromise","extend","pushFile","files","cssDeferred","templatesDeferred","jsDeferred","getModuleConfig","setModuleConfig","moduleConfig","getModules","isLoaded","modulesNames","moduleLoaded","load","errText","self","moduleCache","deferredList","m","template","value","Array","prototype","arguments","localParams","loadDependencies","loadedModule","diff","promisesList","when","requireEntry","filter","n","warn","asyncLoader","directive","$ocLazyLoad","$compile","$animate","$parse","restrict","terminal","priority","compile","content","html","$scope","$element","$attr","model","$watch","enter","bootstrap"],"mappings":"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","file":"ocLazyLoad.min.js","sourcesContent":["(function() {\n  'use strict';\n  var regModules = ['ng'],\n    initModules = [],\n    regInvokes = {},\n    regConfigs = [],\n    justLoaded = [],\n    runBlocks = {},\n    ocLazyLoad = angular.module('oc.lazyLoad', ['ng']),\n    broadcast = angular.noop;\n  ocLazyLoad.provider('$ocLazyLoad', ['$controllerProvider', '$provide', '$compileProvider', '$filterProvider', '$injector', '$animateProvider',\n    function($controllerProvider, $provide, $compileProvider, $filterProvider, $injector, $animateProvider) {\n      var modules = {},\n        providers = {\n          $controllerProvider: $controllerProvider,\n          $compileProvider: $compileProvider,\n          $filterProvider: $filterProvider,\n          $provide: $provide, // other things\n          $injector: $injector,\n          $animateProvider: $animateProvider\n        },\n        anchor = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0],\n        jsLoader, cssLoader, templatesLoader,\n        debug = false,\n        events = false;\n      init(angular.element(window.document));\n      this.$get = ['$log', '$q', '$templateCache', '$http', '$rootElement', '$rootScope', '$cacheFactory', '$interval', function($log, $q, $templateCache, $http, $rootElement, $rootScope, $cacheFactory, $interval) {\n        var instanceInjector,\n          filesCache = $cacheFactory('ocLazyLoad'),\n          uaCssChecked = false,\n          useCssLoadPatch = false;\n        if(!debug) {\n          $log = {};\n          $log['error'] = angular.noop;\n          $log['warn'] = angular.noop;\n          $log['info'] = angular.noop;\n        }\n        providers.getInstanceInjector = function() {\n          return (instanceInjector) ? instanceInjector : (instanceInjector = ($rootElement.data('$injector') || angular.injector()));\n        };\n        broadcast = function broadcast(eventName, params) {\n          if(events) {\n            $rootScope.$broadcast(eventName, params);\n          }\n          if(debug) {\n            $log.info(eventName, params);\n          }\n        }\n        var buildElement = function buildElement(type, path, params) {\n          var deferred = $q.defer(),\n            el, loaded,\n            cacheBuster = function cacheBuster(url) {\n              var dc = new Date().getTime();\n              if(url.indexOf('?') >= 0) {\n                if(url.substring(0, url.length - 1) === '&') {\n                  return url + '_dc=' + dc;\n                }\n                return url + '&_dc=' + dc;\n              } else {\n                return url + '?_dc=' + dc;\n              }\n            };\n          if(angular.isUndefined(filesCache.get(path))) {\n            filesCache.put(path, deferred.promise);\n          }\n          switch(type) {\n            case 'css':\n              el = document.createElement('link');\n              el.type = 'text/css';\n              el.rel = 'stylesheet';\n              el.href = params.cache === false ? cacheBuster(path) : path;\n              break;\n            case 'js':\n              el = document.createElement('script');\n              el.src = params.cache === false ? cacheBuster(path) : path;\n              break;\n            default:\n              deferred.reject(new Error('Requested type \"' + type + '\" is not known. Could not inject \"' + path + '\"'));\n              break;\n          }\n          el.onload = el['onreadystatechange'] = function(e) {\n            if((el['readyState'] && !(/^c|loade/.test(el['readyState']))) || loaded) return;\n            el.onload = el['onreadystatechange'] = null\n            loaded = 1;\n            broadcast('ocLazyLoad.fileLoaded', path);\n            deferred.resolve();\n          }\n          el.onerror = function(e) {\n            deferred.reject(new Error('Unable to load ' + path));\n          }\n          el.async = params.serie ? 0 : 1;\n          var insertBeforeElem = anchor.lastChild;\n          if(params.insertBefore) {\n            var element = angular.element(params.insertBefore);\n            if(element && element.length > 0) {\n              insertBeforeElem = element[0];\n            }\n          }\n          anchor.insertBefore(el, insertBeforeElem);\n          if(type == 'css') {\n            if(!uaCssChecked) {\n              var ua = navigator.userAgent.toLowerCase();\n              if(/iP(hone|od|ad)/.test(navigator.platform)) {\n                var v = (navigator.appVersion).match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n                var iOSVersion = parseFloat([parseInt(v[1], 10), parseInt(v[2], 10), parseInt(v[3] || 0, 10)].join('.'));\n                useCssLoadPatch = iOSVersion < 6;\n              } else if(ua.indexOf(\"android\") > -1) { // Android < 4.4\n                var androidVersion = parseFloat(ua.slice(ua.indexOf(\"android\") + 8));\n                useCssLoadPatch = androidVersion < 4.4;\n              } else if(ua.indexOf('safari') > -1 && ua.indexOf('chrome') == -1) {\n                var safariVersion = parseFloat(ua.match(/version\\/([\\.\\d]+)/i)[1]);\n                useCssLoadPatch = safariVersion < 6;\n              }\n            }\n            if(useCssLoadPatch) {\n              var tries = 1000; // * 20 = 20000 miliseconds\n              var interval = $interval(function() {\n                try {\n                  el.sheet.cssRules;\n                  $interval.cancel(interval);\n                  el.onload();\n                } catch(e) {\n                  if(--tries <= 0) {\n                    el.onerror();\n                  }\n                }\n              }, 20);\n            }\n          }\n          return deferred.promise;\n        }\n        if(angular.isUndefined(jsLoader)) {\n          jsLoader = function(paths, callback, params) {\n            var promises = [];\n            angular.forEachArray(paths, function loading(path) {\n              promises.push(buildElement('js', path, params));\n            });\n            $q.all(promises).then(function success() {\n              callback();\n            }, function error(err) {\n              callback(err);\n            });\n          }\n          jsLoader.ocLazyLoadLoader = true;\n        }\n        if(angular.isUndefined(cssLoader)) {\n          cssLoader = function(paths, callback, params) {\n            var promises = [];\n            angular.forEachArray(paths, function loading(path) {\n              promises.push(buildElement('css', path, params));\n            });\n            $q.all(promises).then(function success() {\n              callback();\n            }, function error(err) {\n              callback(err);\n            });\n          }\n          cssLoader.ocLazyLoadLoader = true;\n        }\n        if(angular.isUndefined(templatesLoader)) {\n          templatesLoader = function(paths, callback, params) {\n            var promises = [];\n            angular.forEachArray(paths, function(url) {\n              var deferred = $q.defer();\n              promises.push(deferred.promise);\n              $http.get(url, params).success(function(data) {\n                if(angular.isString(data) && data.length > 0) {\n                  angular.forEach(angular.element(data), function(node) {\n                    if(node.nodeName === 'SCRIPT' && node.type === 'text/ng-template') {\n                      $templateCache.put(node.id, node.innerHTML);\n                    }\n                  });\n                }\n                if(angular.isUndefined(filesCache.get(url))) {\n                  filesCache.put(url, true);\n                }\n                deferred.resolve();\n              }).error(function(err) {\n                deferred.reject(new Error('Unable to load template file \"' + url + '\": ' + err));\n              });\n            });\n            return $q.all(promises).then(function success() {\n              callback();\n            }, function error(err) {\n              callback(err);\n            });\n          }\n          templatesLoader.ocLazyLoadLoader = true;\n        }\n        var filesLoader = function(config, params) {\n          var cssFiles = [],\n            templatesFiles = [],\n            jsFiles = [],\n            promises = [],\n            cachePromise = null;\n          angular.extend(params || {}, config);\n          var pushFile = function(path) {\n            cachePromise = filesCache.get(path);\n            if(angular.isUndefined(cachePromise) || params.cache === false) {\n              if(/\\.(css|less)[^\\.]*$/.test(path) && cssFiles.indexOf(path) === -1) {\n                cssFiles.push(path);\n              } else if(/\\.(htm|html)[^\\.]*$/.test(path) && templatesFiles.indexOf(path) === -1) {\n                templatesFiles.push(path);\n              } else if(jsFiles.indexOf(path) === -1) {\n                jsFiles.push(path);\n              }\n            } else if(cachePromise) {\n              promises.push(cachePromise);\n            }\n          }\n          if(params.serie) {\n            pushFile(params.files.shift());\n          } else {\n            angular.forEachArray(params.files, function(path) {\n              pushFile(path);\n            });\n          }\n          if(cssFiles.length > 0) {\n            var cssDeferred = $q.defer();\n            cssLoader(cssFiles, function(err) {\n              if(angular.isDefined(err) && cssLoader.hasOwnProperty('ocLazyLoadLoader')) {\n                $log.error(err);\n                cssDeferred.reject(err);\n              } else {\n                cssDeferred.resolve();\n              }\n            }, params);\n            promises.push(cssDeferred.promise);\n          }\n          if(templatesFiles.length > 0) {\n            var templatesDeferred = $q.defer();\n            templatesLoader(templatesFiles, function(err) {\n              if(angular.isDefined(err) && templatesLoader.hasOwnProperty('ocLazyLoadLoader')) {\n                $log.error(err);\n                templatesDeferred.reject(err);\n              } else {\n                templatesDeferred.resolve();\n              }\n            }, params);\n            promises.push(templatesDeferred.promise);\n          }\n          if(jsFiles.length > 0) {\n            var jsDeferred = $q.defer();\n            jsLoader(jsFiles, function(err) {\n              if(angular.isDefined(err) && jsLoader.hasOwnProperty('ocLazyLoadLoader')) {\n                $log.error(err);\n                jsDeferred.reject(err);\n              } else {\n                jsDeferred.resolve();\n              }\n            }, params);\n            promises.push(jsDeferred.promise);\n          }\n          if(params.serie && params.files.length > 0) {\n            return $q.all(promises).then(function success() {\n              return filesLoader(config, params);\n            });\n          } else {\n            return $q.all(promises);\n          }\n        }\n        return {\n          getModuleConfig: function(moduleName) {\n            if(!angular.isString(moduleName)) {\n              throw new Error('You need to give the name of the module to get');\n            }\n            if(!modules[moduleName]) {\n              return null;\n            }\n            return modules[moduleName];\n          },\n          setModuleConfig: function(moduleConfig) {\n            if(!angular.isObject(moduleConfig)) {\n              throw new Error('You need to give the module config object to set');\n            }\n            modules[moduleConfig.name] = moduleConfig;\n            return moduleConfig;\n          },\n          getModules: function() {\n            return regModules;\n          },\n          isLoaded: function(modulesNames) {\n            var moduleLoaded = function(module) {\n              var isLoaded = regModules.indexOf(module) > -1;\n              if(!isLoaded) {\n                isLoaded = !!moduleExists(module);\n              }\n              return isLoaded;\n            }\n            if(angular.isString(modulesNames)) {\n              modulesNames = [modulesNames];\n            }\n            if(angular.isArray(modulesNames)) {\n              var i, len;\n              for(i = 0, len = modulesNames.length; i < len; i++) {\n                if(!moduleLoaded(modulesNames[i])) {\n                  return false;\n                }\n              }\n              return true;\n            } else {\n              throw new Error('You need to define the module(s) name(s)');\n            }\n          },\n          load: function(module, params) {\n            var self = this,\n              config = null,\n              moduleCache = [],\n              deferredList = [],\n              deferred = $q.defer(),\n              moduleName,\n              errText;\n            if(angular.isUndefined(params)) {\n              params = {};\n            }\n            if(angular.isArray(module)) {\n              angular.forEachArray(module, function(m) {\n                if(m) {\n                  deferredList.push(self.load(m, params));\n                }\n              });\n              $q.all(deferredList).then(function success() {\n                deferred.resolve(module);\n              }, function error(err) {\n                deferred.reject(err);\n              });\n              return deferred.promise;\n            }\n            moduleName = getModuleName(module);\n            if(typeof module === 'string') {\n              config = self.getModuleConfig(module);\n              if(!config) {\n                config = {\n                  files: [module]\n                };\n                moduleName = null;\n              }\n            } else if(typeof module === 'object') {\n              config = self.setModuleConfig(module);\n            }\n            if(config === null) {\n              errText = 'Module \"' + moduleName + '\" is not configured, cannot load.';\n              $log.error(errText);\n              deferred.reject(new Error(errText));\n            } else {\n              if(angular.isDefined(config.template)) {\n                if(angular.isUndefined(config.files)) {\n                  config.files = [];\n                }\n                if(angular.isString(config.template)) {\n                  config.files.push(config.template);\n                } else if(angular.isArray(config.template)) {\n                  config.files.concat(config.template);\n                }\n              }\n            }\n            moduleCache.push = function(value) {\n              if(this.indexOf(value) === -1) {\n                Array.prototype.push.apply(this, arguments);\n              }\n            };\n            if(angular.isDefined(moduleName) && moduleExists(moduleName) && regModules.indexOf(moduleName) !== -1) {\n              moduleCache.push(moduleName);\n              if(angular.isUndefined(config.files)) {\n                deferred.resolve();\n                return deferred.promise;\n              }\n            }\n            var localParams = {};\n            angular.extend(localParams, params, config);\n            var loadDependencies = function loadDependencies(module) {\n              var moduleName,\n                loadedModule,\n                requires,\n                diff,\n                promisesList = [];\n              moduleName = getModuleName(module);\n              if(moduleName === null) {\n                return $q.when();\n              } else {\n                try {\n                  loadedModule = getModule(moduleName);\n                } catch(e) {\n                  var deferred = $q.defer();\n                  $log.error(e.message);\n                  deferred.reject(e);\n                  return deferred.promise;\n                }\n                requires = getRequires(loadedModule);\n              }\n              angular.forEachArray(requires, function(requireEntry) {\n                if(typeof requireEntry === 'string') {\n                  var config = self.getModuleConfig(requireEntry);\n                  if(config === null) {\n                    moduleCache.push(requireEntry); // We don't know about this module, but something else might, so push it anyway.\n                    return;\n                  }\n                  requireEntry = config;\n                }\n                if(moduleExists(requireEntry.name)) {\n                  if(typeof module !== 'string') {\n                    diff = requireEntry.files.filter(function(n) {\n                      return self.getModuleConfig(requireEntry.name).files.indexOf(n) < 0;\n                    });\n                    if(diff.length !== 0) {\n                      $log.warn('Module \"', moduleName, '\" attempted to redefine configuration for dependency. \"', requireEntry.name, '\"\\n Additional Files Loaded:', diff);\n                    }\n                    promisesList.push(filesLoader(requireEntry.files, localParams).then(function() {\n                      return loadDependencies(requireEntry);\n                    }));\n                  }\n                  return;\n                } else if(typeof requireEntry === 'object') {\n                  if(requireEntry.hasOwnProperty('name') && requireEntry['name']) {\n                    self.setModuleConfig(requireEntry);\n                    moduleCache.push(requireEntry['name']);\n                  }\n                  if(requireEntry.hasOwnProperty('css') && requireEntry['css'].length !== 0) {\n                    angular.forEach(requireEntry['css'], function(path) {\n                      buildElement('css', path, localParams);\n                    });\n                  }\n                }\n                if(requireEntry.hasOwnProperty('files') && requireEntry.files.length !== 0) {\n                  if(requireEntry.files) {\n                    promisesList.push(filesLoader(requireEntry, localParams).then(function() {\n                      return loadDependencies(requireEntry);\n                    }));\n                  }\n                }\n              });\n              return $q.all(promisesList);\n            }\n            filesLoader(config, localParams).then(function success() {\n              if(moduleName === null) {\n                deferred.resolve(module);\n              } else {\n                moduleCache.push(moduleName);\n                loadDependencies(moduleName).then(function success() {\n                  try {\n                    justLoaded = [];\n                    register(providers, moduleCache, localParams);\n                  } catch(e) {\n                    $log.error(e.message);\n                    deferred.reject(e);\n                    return;\n                  }\n                  deferred.resolve(module);\n                }, function error(err) {\n                  deferred.reject(err);\n                });\n              }\n            }, function error(err) {\n              deferred.reject(err);\n            });\n            return deferred.promise;\n          }\n        };\n      }];\n      this.config = function(config) {\n        if(angular.isDefined(config.jsLoader) || angular.isDefined(config.asyncLoader)) {\n          if(!angular.isFunction(config.jsLoader || config.asyncLoader)) {\n            throw('The js loader needs to be a function');\n          }\n          jsLoader = config.jsLoader || config.asyncLoader;\n        }\n        if(angular.isDefined(config.cssLoader)) {\n          if(!angular.isFunction(config.cssLoader)) {\n            throw('The css loader needs to be a function');\n          }\n          cssLoader = config.cssLoader;\n        }\n        if(angular.isDefined(config.templatesLoader)) {\n          if(!angular.isFunction(config.templatesLoader)) {\n            throw('The template loader needs to be a function');\n          }\n          templatesLoader = config.templatesLoader;\n        }\n        if(angular.isDefined(config.modules)) {\n          if(angular.isArray(config.modules)) {\n            angular.forEachArray(config.modules, function(moduleConfig) {\n              modules[moduleConfig.name] = moduleConfig;\n            });\n          } else {\n            modules[config.modules.name] = config.modules;\n          }\n        }\n        if(angular.isDefined(config.debug)) {\n          debug = config.debug;\n        }\n        if(angular.isDefined(config.events)) {\n          events = config.events;\n        }\n      };\n    }]);\n  ocLazyLoad.directive('ocLazyLoad', ['$ocLazyLoad', '$compile', '$animate', '$parse',\n    function($ocLazyLoad, $compile, $animate, $parse) {\n      return {\n        restrict: 'A',\n        terminal: true,\n        priority: 1000,\n        compile: function(element, attrs) {\n          var content = element[0].innerHTML;\n          element.html('');\n          return function($scope, $element, $attr) {\n            var model = $parse($attr.ocLazyLoad);\n            $scope.$watch(function() {\n              return model($scope) || $attr.ocLazyLoad;\n            }, function(moduleName) {\n              if(angular.isDefined(moduleName)) {\n                $ocLazyLoad.load(moduleName).then(function success(moduleConfig) {\n                  $animate.enter($compile(content)($scope), null, $element);\n                });\n              }\n            }, true);\n          };\n        }\n      };\n    }]);\n  function getRequires(module) {\n    var requires = [];\n    angular.forEachArray(module.requires, function(requireModule) {\n      if(regModules.indexOf(requireModule) === -1) {\n        requires.push(requireModule);\n      }\n    });\n    return requires;\n  }\n  function moduleExists(moduleName) {\n    try {\n      return angular.module(moduleName);\n    } catch(e) {\n      if(/No module/.test(e) || (e.message.indexOf('$injector:nomod') > -1)) {\n        return false;\n      }\n    }\n  }\n  function getModule(moduleName) {\n    try {\n      return angular.module(moduleName);\n    } catch(e) {\n      if(/No module/.test(e) || (e.message.indexOf('$injector:nomod') > -1)) {\n        e.message = 'The module \"' + moduleName + '\" that you are trying to load does not exist. ' + e.message\n      }\n      throw e;\n    }\n  }\n  function invokeQueue(providers, queue, moduleName, reconfig) {\n    if(!queue) {\n      return;\n    }\n    var i, len, args, provider;\n    for(i = 0, len = queue.length; i < len; i++) {\n      args = queue[i];\n      if(angular.isArray(args)) {\n        if(providers !== null) {\n          if(providers.hasOwnProperty(args[0])) {\n            provider = providers[args[0]];\n          } else {\n            throw new Error('unsupported provider ' + args[0]);\n          }\n        }\n        var isNew = registerInvokeList(args, moduleName);\n        if(args[1] !== 'invoke') {\n          if(isNew && angular.isDefined(provider)) {\n            provider[args[1]].apply(provider, args[2]);\n          }\n        } else { // config block\n          var callInvoke = function(fct) {\n            var invoked = regConfigs.indexOf(moduleName + '-' + fct);\n            if(invoked === -1 || reconfig) {\n              if(invoked === -1) {\n                regConfigs.push(moduleName + '-' + fct);\n              }\n              if(angular.isDefined(provider)) {\n                provider[args[1]].apply(provider, args[2]);\n              }\n            }\n          }\n          if(angular.isFunction(args[2][0])) {\n            callInvoke(args[2][0]);\n          } else if(angular.isArray(args[2][0])) {\n            for(var j = 0, jlen = args[2][0].length; j < jlen; j++) {\n              if(angular.isFunction(args[2][0][j])) {\n                callInvoke(args[2][0][j]);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  function register(providers, registerModules, params) {\n    if(registerModules) {\n      var k, r, moduleName, moduleFn, tempRunBlocks = [];\n      for(k = registerModules.length - 1; k >= 0; k--) {\n        moduleName = registerModules[k];\n        if(typeof moduleName !== 'string') {\n          moduleName = getModuleName(moduleName);\n        }\n        if(!moduleName || justLoaded.indexOf(moduleName) !== -1) {\n          continue;\n        }\n        var newModule = regModules.indexOf(moduleName) === -1;\n        moduleFn = angular.module(moduleName);\n        if(newModule) { // new module\n          regModules.push(moduleName);\n          register(providers, moduleFn.requires, params);\n        }\n        if(moduleFn._runBlocks.length > 0) {\n          runBlocks[moduleName] = [];\n          while(moduleFn._runBlocks.length > 0) {\n            runBlocks[moduleName].push(moduleFn._runBlocks.shift());\n          }\n        }\n        if(angular.isDefined(runBlocks[moduleName]) && (newModule || params.rerun)) {\n          tempRunBlocks = tempRunBlocks.concat(runBlocks[moduleName]);\n        }\n        invokeQueue(providers, moduleFn._invokeQueue, moduleName, params.reconfig);\n        invokeQueue(providers, moduleFn._configBlocks, moduleName, params.reconfig); // angular 1.3+\n        broadcast(newModule ? 'ocLazyLoad.moduleLoaded' : 'ocLazyLoad.moduleReloaded', moduleName);\n        registerModules.pop();\n        justLoaded.push(moduleName);\n      }\n      var instanceInjector = providers.getInstanceInjector();\n      angular.forEachArray(tempRunBlocks, function(fn) {\n        instanceInjector.invoke(fn);\n      });\n    }\n  }\n  function registerInvokeList(args, moduleName) {\n    var invokeList = args[2][0],\n      type = args[1],\n      newInvoke = false;\n    if(angular.isUndefined(regInvokes[moduleName])) {\n      regInvokes[moduleName] = {};\n    }\n    if(angular.isUndefined(regInvokes[moduleName][type])) {\n      regInvokes[moduleName][type] = [];\n    }\n    var onInvoke = function(invokeName) {\n      newInvoke = true;\n      regInvokes[moduleName][type].push(invokeName);\n      broadcast('ocLazyLoad.componentLoaded', [moduleName, type, invokeName]);\n    }\n    if(angular.isString(invokeList) && regInvokes[moduleName][type].indexOf(invokeList) === -1) {\n      onInvoke(invokeList);\n    } else if(angular.isObject(invokeList)) {\n      angular.forEach(invokeList, function(invoke) {\n        if(angular.isString(invoke) && regInvokes[moduleName][type].indexOf(invoke) === -1) {\n          onInvoke(invoke);\n        }\n      });\n    } else {\n      return false;\n    }\n    return newInvoke;\n  }\n  function getModuleName(module) {\n    var moduleName = null;\n    if(angular.isString(module)) {\n      moduleName = module;\n    } else if(angular.isObject(module) && module.hasOwnProperty('name') && angular.isString(module.name)) {\n      moduleName = module.name;\n    }\n    return moduleName;\n  }\n  function init(element) {\n    if(initModules.length === 0) {\n      throw 'No module found during bootstrap, unable to init ocLazyLoad';\n    }\n    var addReg = function addReg(moduleName) {\n      if(regModules.indexOf(moduleName) === -1) {\n        regModules.push(moduleName);\n        var mainModule = angular.module(moduleName);\n        invokeQueue(null, mainModule._invokeQueue, moduleName);\n        invokeQueue(null, mainModule._configBlocks, moduleName); // angular 1.3+\n        angular.forEachArray(mainModule.requires, addReg);\n      }\n    };\n    angular.forEachArray(initModules, function(moduleName) {\n      addReg(moduleName);\n    });\n  }\n  var bootstrap = angular.bootstrap;\n  angular.bootstrap = function(element, modules, config) {\n    initModules = modules.slice(); // make a clean copy\n    return bootstrap(element, modules, config);\n  };\n})();\n"],"sourceRoot":"/source/"}